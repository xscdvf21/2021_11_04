#ifndef Engine_Enum_h__
#define Engine_Enum_h__

namespace Engine
{
	// DYNAMIC의 경우 매 프레임마다 갱신이 필요한 컴포넌트
	enum COMPONENTID { ID_DYNAMIC, ID_STATIC, ID_END };
	
	enum WINMODE { MODE_FULL, MODE_WIN };
	enum BUFFERID{ BUFFER_TRICOL, BUFFER_RCTEX, BUFFER_TERRAINTEX, BUFFER_NORMALTERRAINTEX, BUFFER_CUBETEX, BUFFER_ROUNDTEX, BUFFER_TRAILTEX, BUFFER_END	};
	
	enum INFO { INFO_RIGHT, INFO_UP, INFO_LOOK, INFO_POS, INFO_END };
	enum ROTATION { ROT_X, ROT_Y, ROT_Z, ROT_END };

	
	enum TEXTURETYPE { TEX_NORMAL, TEX_CUBE, TEX_END };

	enum RENDERID { RENDER_PRIORITY, RENDER_VTF_CODY, RENDER_VTF_MAY, RENDER_FORWARDUI,RENDER_NONALPHA, RENDER_ALPHA, RENDER_UI, RENDER_MENUUI, RENDER_PRIUI, RENDER_FINALUI, RENDER_SHADOW, RENDER_STENCIL, RENDER_END};

	enum MOUSEKEYSTATE	{ DIM_LB, DIM_RB, DIM_MB, DIM_END };
	enum MOUSEMOVESTATE { DIMS_X, DIMS_Y, DIMS_Z, DIMS_END };

	enum PADKEYSTATE { DIC_LB, DIC_LT, DIC_RB, DIC_RT, DIC_X, DIC_Y, DIC_A, DIC_B, DIC_START, DIC_MENU, DIC_LS, DIC_RS, DIC_END };
	enum PADMOVESTATE { DIC_LS_X, DIC_LS_Y, DIC_RS_X, DIC_RS_Y,DICS_END };

	enum MESHTYPE { MESH_STATIC, MESH_DYNAMIC, MESH_NAVI, MESH_PHYS, MESH_END };

	enum COLTYPE { COL_FALSE, COL_TRUE, COL_END };

	enum POINTT { POINT_START, POINT_FINISH, POINT_END };
	enum COMPARE { COMPARE_LEFT, COMPARE_RIGHT }; // 플레이어 위치를 기준으로 왼쪽에 선분이 있으면 이동한 것
	enum HITTYPE { DEFAULT, CHESSBOSS };
	enum CAMERAMODE {CAMERA_DEFAULT,CAMERA_STALKING,CAMERA_FIX,CAMERA_TRACING};
	enum RESOURCEID
	{
		RESOURCE_STATIC,
		RESOURCE_LOGO,
		RESOURCE_MENUSELECT,
		RESOURCE_CHAPTERSELECT,
		RESOURCE_MENUPLAYERSELECT,
		RESOURCE_VF,
		RESOURCE_VF2,
		RESOURCE_VF3,
		RESOURCE_VB,
		RESOURCE_CF,
		RESOURCE_CB,
		RESOURCE_SF,
		RESOURCE_SF2,
		RESOURCE_SF3,
		RESOURCE_SB,
		RESOURCE_TF,
		RESOURCE_ENDING,
		RESOURCE_PLAYER,
		RESOURCE_END,
	};
}

#endif // Engine_Enum_h__
